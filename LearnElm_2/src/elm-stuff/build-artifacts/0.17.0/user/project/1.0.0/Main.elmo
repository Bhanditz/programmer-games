var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$options = {preventDefault: true, stopPropagation: true};
var _user$project$Main$drawFigure = function (f) {
	var _p0 = f.n;
	if (_p0 === 3) {
		return A2(
			_elm_lang$svg$Svg$polygon,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg_Attributes$fill(f.c),
					_elm_lang$svg$Svg_Attributes$x('5'),
					_elm_lang$svg$Svg_Attributes$y('5'),
					_elm_lang$svg$Svg_Attributes$points(
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(f.pos.x - (20 * f.r)),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(f.pos.y - (20 * f.r)),
								A2(
									_elm_lang$core$Basics_ops['++'],
									',',
									A2(
										_elm_lang$core$Basics_ops['++'],
										_elm_lang$core$Basics$toString(f.pos.x),
										A2(
											_elm_lang$core$Basics_ops['++'],
											' ',
											A2(
												_elm_lang$core$Basics_ops['++'],
												_elm_lang$core$Basics$toString(f.pos.y + (20 * f.r)),
												A2(
													_elm_lang$core$Basics_ops['++'],
													',',
													A2(
														_elm_lang$core$Basics_ops['++'],
														_elm_lang$core$Basics$toString(f.pos.x + (20 * f.r)),
														A2(
															_elm_lang$core$Basics_ops['++'],
															' ',
															A2(
																_elm_lang$core$Basics_ops['++'],
																_elm_lang$core$Basics$toString(f.pos.y - (20 * f.r)),
																','))))))))))))
				]),
			_elm_lang$core$Native_List.fromArray(
				[]));
	} else {
		return A2(
			_elm_lang$svg$Svg$rect,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg_Attributes$fill(f.c),
					_elm_lang$svg$Svg_Attributes$x(
					_elm_lang$core$Basics$toString(f.pos.x - (2 * f.r))),
					_elm_lang$svg$Svg_Attributes$y(
					_elm_lang$core$Basics$toString(f.pos.y - (2 * f.r))),
					_elm_lang$svg$Svg_Attributes$width(
					_elm_lang$core$Basics$toString(4 * f.r)),
					_elm_lang$svg$Svg_Attributes$height(
					_elm_lang$core$Basics$toString(4 * f.r))
				]),
			_elm_lang$core$Native_List.fromArray(
				[]));
	}
};
var _user$project$Main$Figure = F4(
	function (a, b, c, d) {
		return {pos: a, n: b, r: c, c: d};
	});
var _user$project$Main$Model = F5(
	function (a, b, c, d, e) {
		return {currentN: a, currentR: b, currentC: c, figures: d, pos: e};
	});
var _user$project$Main$Position = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A5(
		_user$project$Main$Model,
		3,
		20,
		'#FFFFFF',
		_elm_lang$core$Native_List.fromArray(
			[]),
		A2(_user$project$Main$Position, 0, 0)),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$offsetPosition = A3(
	_elm_lang$core$Json_Decode$object2,
	_user$project$Main$Position,
	A2(_elm_lang$core$Json_Decode_ops[':='], 'offsetX', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'offsetY', _elm_lang$core$Json_Decode$int));
var _user$project$Main$NewRadius = function (a) {
	return {ctor: 'NewRadius', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Decrement':
				return (_elm_lang$core$Native_Utils.cmp(model.currentN, 3) > 0) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentN: model.currentN - 1}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Increment':
				return (_elm_lang$core$Native_Utils.cmp(model.currentN, 4) < 0) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentN: model.currentN + 1}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Click':
				var _p2 = _p1._0;
				return ((_elm_lang$core$Native_Utils.cmp(_p2.y, 98) > -1) && ((_elm_lang$core$Native_Utils.cmp(_p2.y, 132) < 1) && ((_elm_lang$core$Native_Utils.cmp(_p2.x, 0) > -1) && (_elm_lang$core$Native_Utils.cmp(_p2.x, 37) < 0)))) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentC: '#FF0000'}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : (((_elm_lang$core$Native_Utils.cmp(_p2.y, 98) > -1) && ((_elm_lang$core$Native_Utils.cmp(_p2.y, 132) < 1) && ((_elm_lang$core$Native_Utils.cmp(_p2.x, 56) > -1) && (_elm_lang$core$Native_Utils.cmp(_p2.x, 93) < 0)))) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentC: '#008000'}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : (((_elm_lang$core$Native_Utils.cmp(_p2.y, 98) > -1) && ((_elm_lang$core$Native_Utils.cmp(_p2.y, 132) < 1) && ((_elm_lang$core$Native_Utils.cmp(_p2.x, 112) > -1) && (_elm_lang$core$Native_Utils.cmp(_p2.x, 149) < 0)))) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentC: '#FFFF00'}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : (((_elm_lang$core$Native_Utils.cmp(_p2.y, 98) > -1) && ((_elm_lang$core$Native_Utils.cmp(_p2.y, 132) < 1) && ((_elm_lang$core$Native_Utils.cmp(_p2.x, 168) > -1) && (_elm_lang$core$Native_Utils.cmp(_p2.x, 205) < 0)))) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentC: '#0000FF'}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{pos: _p2}),
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$Main$NewRadius,
						A2(_elm_lang$core$Random$int, 20, 100))
				})));
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentR: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$Click = function (a) {
	return {ctor: 'Click', _0: a};
};
var _user$project$Main$Increment = {ctor: 'Increment'};
var _user$project$Main$Decrement = {ctor: 'Decrement'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$Decrement)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('-')
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(model.currentN))
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$Increment)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('+')
					])),
				A2(
				_elm_lang$svg$Svg$svg,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$svg$Svg_Attributes$version('1.1'),
						_elm_lang$svg$Svg_Attributes$x('0'),
						_elm_lang$svg$Svg_Attributes$y('0'),
						_elm_lang$svg$Svg_Attributes$viewBox('0 0 100 4')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$svg$Svg$rect,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg_Attributes$fill('#FF0000'),
								_elm_lang$svg$Svg_Attributes$x('0'),
								_elm_lang$svg$Svg_Attributes$y('1'),
								_elm_lang$svg$Svg_Attributes$width('2'),
								_elm_lang$svg$Svg_Attributes$height('2')
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$svg$Svg$rect,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg_Attributes$fill('#7FD13B'),
								_elm_lang$svg$Svg_Attributes$x('3'),
								_elm_lang$svg$Svg_Attributes$y('1'),
								_elm_lang$svg$Svg_Attributes$width('2'),
								_elm_lang$svg$Svg_Attributes$height('2')
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$svg$Svg$rect,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg_Attributes$fill('#FFFF00'),
								_elm_lang$svg$Svg_Attributes$x('6'),
								_elm_lang$svg$Svg_Attributes$y('1'),
								_elm_lang$svg$Svg_Attributes$width('2'),
								_elm_lang$svg$Svg_Attributes$height('2')
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$svg$Svg$rect,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg_Attributes$fill('#0000FF'),
								_elm_lang$svg$Svg_Attributes$x('9'),
								_elm_lang$svg$Svg_Attributes$y('1'),
								_elm_lang$svg$Svg_Attributes$width('2'),
								_elm_lang$svg$Svg_Attributes$height('2')
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$svg$Svg$svg,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$svg$Svg_Attributes$version('1.1'),
						_elm_lang$svg$Svg_Attributes$x('0'),
						_elm_lang$svg$Svg_Attributes$y('0'),
						_elm_lang$svg$Svg_Attributes$viewBox('0 0 100.0 40.0'),
						A3(
						_elm_lang$virtual_dom$VirtualDom$onWithOptions,
						'click',
						_user$project$Main$options,
						A2(_elm_lang$core$Json_Decode$map, _user$project$Main$Click, _user$project$Main$offsetPosition))
					]),
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$svg$Svg$rect,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$svg$Svg_Attributes$fill('#87CEFA'),
									_elm_lang$svg$Svg_Attributes$x('0'),
									_elm_lang$svg$Svg_Attributes$y('0'),
									_elm_lang$svg$Svg_Attributes$width('1000'),
									_elm_lang$svg$Svg_Attributes$height('1000')
								]),
							_elm_lang$core$Native_List.fromArray(
								[]))
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$svg$Svg$line,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$svg$Svg_Attributes$x1('0'),
									_elm_lang$svg$Svg_Attributes$y1('0'),
									_elm_lang$svg$Svg_Attributes$x2(
									_elm_lang$core$Basics$toString(model.pos.x)),
									_elm_lang$svg$Svg_Attributes$y2(
									_elm_lang$core$Basics$toString(model.pos.y)),
									_elm_lang$svg$Svg_Attributes$style('stroke:rgb(255,0,0);stroke-width:2')
								]),
							_elm_lang$core$Native_List.fromArray(
								[]))
						])))
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
